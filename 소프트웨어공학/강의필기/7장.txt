Modularization
	전체 프로그램을 한 번에 설계 x 단일 기능을 갖출 수 있도록
	부분적으로 묶어서 처리하는 기술 (함수)
	독립적으로 설계할 수 있기 때문에 설계가 용이하다
	프로그램 복잡도를 감소시킨다.
Abstraction
	세부적인 설계를 배제하고 전체 흐름과 구조를 한눈에 알아불 수 있도록 개괄적인 설계부터 점차 세부적으로 진행하는 설계기법
information hiding
	모듈 간의 관계성을 최소화시키는 설계 기법 소프트웨어의 변경을 용이하게 한다.

좋은 설계의 기준
	설계는 요구사항을 모두 표현해야 한다.
	설계는 유지보수하는 사람이 읽기 쉽고 이해하기 쉽도록 객관성 있게 작성
	모듈적이어야 하며 두 모듈 간의 상호의존도는 약하게 해야 한다.

결합도(Coupling)에 의한 모듈의 평가 기준
	결합도 평가는 두 모듈 간의 관계성의 척도로, 약할수록 좋은 결합이다.
	1. Data Coupling(자료 결합도) : call by valueA가 B모률로 데이터를 보낼 때 B모듈에서 그 데이터를 바꿔도 A에서는 바뀌지 않아야 한다.
	2.Stamp Coupling(구조 결합도): 배열과 record를 공유할 때 사용
	3.Control Counpling(제어 결합도)
	4.Extern Coupling(외부 결합도): 전역 변수
	5.Common Coupling(공통 결합도): call by reference data coupling과 다르게 A모듈의 데이터도 같이 변하는 것
	6.Content Coupling(내용 결합도): 모듈이 분화되지 않음 한 모듈이 고장나면 다른 모듈도 같이 고장남	

응집도에 의한 모듈(cohesion)의 평가 기준
	응집도는 한 모듈을 이루고 있는 각 명령어들이 공통적인 목적을 달성하기 위하여 어느정도의 관령성이 있는가 파악하는 척도
	결합도는 약할수록, 응집도는 강할수록 좋다.

	1.Coincidental Cohesion(우연적 응집도): 라인 등분, 뚜렷한 관계없이 묶인 경우
	2.Logical Cohesion(논리적 응집도): 같은 범주로 묶인 모듈
	3.Temporal Cohesion(시기적 응집도): 시간적으로 수행시기가 같은 기능끼리 존재 변수초기화, 파일 일괄적으로 열기
	4.Procedural Cohesion(절차적 응집도):순서를 가지고 있는 모듈, 순서도등의 일부를 모듈화하는 작업
	5.Communication Cohesion(통신적, 정보적 응집도): 작업 대상이 같은 기능끼리 
	6.Sequential Cohesion(순차적 응집도): 한 라인의 출력 결과가 다음 라인의 입력에 사용되면 순차적
	7.Functional Cohesion(기능적, 함수적 응집도): sin(),cos(),sqrt() 하나의 단일 기능으로 존재하는 경우로 프로그램 언어에서 지원받는 라이브러리!
요구사항 분석은 어렵다
	이유: 요구를 하는 사람들이 구체적으로 무엇을 원하는지 모른다.
	        요구가 계속 바뀐다
	        요구하는 사람들은 프로그램이 어떻게 돌아가는지 잘 모른다.

요구사항 분석 과정
	1. gathering requirements
		interviews
			가장 대중적인 기술이다.
			인터뷰 할 사람을 정하고 질문지를 만들고(open-ended closed ended) 인터뷰를 준비한다.
		Joint Application Delvelopment(JAD)
			여러 명 모아놓고 미팅하는 것
		Questionnaires(설문조사)
			참가자를 선택한다.
			설문지를 만든다
			설문지 결과를 종합한다.
			결과를 참가자들에게 알려준다.
		Document analysis
			
		Obervation
			결과를 보여주고 바꿀지말지 선택하라고 한다.
	2. refining requirements
		copy existing systems
		Brainstrom
	3. reordering requirements
		UML
		User Stories: 짧고 간결하게 특징만 쓴다.
		Use Cases: 주어진 일을 완료하기 위한 행동의 절차이다.
		Prototypes
		Requirements Specification
	4. validation and verification
		validation : 어떤 기능이 고객한테 맞는냐
	 	verification: 어떤 방법, 구조가 옳냐
	5. Changing Requirements
 
요구사항 유형
	User requirement : 대략적인 요구
	System requirements : 구체적인 기능 요구

요구사항을 결정할 때 고려해야 될 점
	functional : 기능적인 측면
	Non-functional: 성능 사용성 보안 등
		usability: 사용성, 얼마나 사용자 친화적으로 되어있는지
		reliability: 신뢰성, 장애가 일어났을 때 어떻게 해결되는지
		performanace: 성능, 응답시간 처리율 정확도 사용가능성 등
		supportability: 지원성, 다른 환경에서도 지원가능하고 유지보수가 얼마나 쉬운가
	extended requirements
		Design
		implementation: 리눅스의 자바로 구현해야한다.
		interface
		physical

요구사항 분석 전략
	problem analysis
		현재 시스템에서 문제를 유저에게 물어본다.
		user에게 이 문제를 어떻게 해결해줬으면 좋겠는지 물어본다.
	root cause analysis
		문제해결에 초점을 맞추는 것이 아니라 문제 그 자체에 초점을 맞춘다.
		문제 리스트에 우선순위를 만든다
	duration analysis
		사업과정에서 각 단계를 완료하는데 필요한 시간 결정
	Activity-based costing
	informal benchmarking
		다른 성공한 사업의 과정을 분석한다.



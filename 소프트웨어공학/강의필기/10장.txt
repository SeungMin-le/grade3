Design patterns
	1. structural patterns: 프로그램 구조를 결정
		composite: 컴포넌트 합성
		Adapter: 기존 시스템간의 연결 
		bridge: 
		facade: 하부에 존재하는 시스템에 대한 인터페이스 제공
		proxy: 내 것에서 쓸 때와 다른 곳에서 쓸 때 똑같이 사용(투명)
	2. Behavioral patterns: 프로그램이 어떻게 동작하는지 동작흐름
		command: 제어흐름 정형화
		observer: 변수 값 같은 것의 변화를 관찰하는 것 (관찰받는 객체, 관찰하는 객체 2개가 존재)
		Strategy: 문서를 읽을 때 
	3. creational patterns: 객체를 생성할 때 어떤 절차로 생성하는지 결정
		Abstract Factory: 객체를 만들 때 알아서 만들어준다 동일한 객체를 만들 때 사용
		Builder: 복잡한 생성조건, 프로세스를 만들 때 